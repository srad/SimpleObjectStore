@using SimpleObjectStore.Admin.Services.v1
@inject SimpleObjectStoreClient Client
@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation

<div class="nav-scrollable">
    <button type="button" class="btn btn-primary p-2 mb-2 w-100" @onclick="AddBucket">
        <span style="cursor: pointer">
            <i class="bi bi-bucket-fill"></i>
            Add Bucket
        </span>
    </button>

    <div class="list-group">
        @if (Buckets.Any())
        {
            @foreach (var bucket in Buckets)
            {
                <NavLink class="list-group-item list-group-item-action p-2" ActiveClass="bg-secondary-subtle" href="@($"bucket/{bucket.BucketId}")">
                    <div class="d-flex w-100 justify-content-between align-items-center">
                        <span>@bucket.Name</span>
                        <span class="badge bg-info rounded-pill d-flex align-items-center">@bucket.FileCount</span>
                    </div>
                </NavLink>
            }
        }
    </div>
</div>

@code {
    [Parameter] public ICollection<BucketViewDto> Buckets { get; set; } = [];
    
    private DriveInfo? DriveInfo { get; set; }

    private async Task AddBucket()
    {
        try
        {
            var name = await JsRuntime.InvokeAsync<string>("prompt", "Bucket name?");
            if (string.IsNullOrWhiteSpace(name))
            {
                return;
            }

            var newBucket = await Client.BucketsCreateAsync(name);
            Buckets?.Add(newBucket);
            await InvokeAsync(StateHasChanged);
            Navigation.NavigateTo("/bucket/" + newBucket.BucketId);
        }
        catch (Exception e)
        {
            await JsRuntime.InvokeVoidAsync("alert", e.Message);
        }
    }
    
}